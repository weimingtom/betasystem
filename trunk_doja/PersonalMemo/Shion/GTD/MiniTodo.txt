//3種攻撃導入
{
    攻撃.
    防御.
    回復.
    
    Action(
        Character my_chara ,
        Character target_chara );
    
    //防御って実は難しいな…ｗ
    
}
//ステージ作成
    class Stage;
        string m_name; //!< フィールドの名前
        std::vector<int> m_enemy_list; //!< 出現する敵のリスト.

//キャラクター生成関数の作成.
{
    final int CharacterType_BlueSlime = 0;
    final int CharacterType_GreenSlime = 1;
    final int CharacterType_Prime = 2;
}
    
//遷移作成
    タイトル　ステージ選択　バトル  勝ち　（バトル　勝ち)*n　ステージクリアー　ステージ選択
                                    負け　ゲームオーバー　タイトル

//レベル導入
    ・Characterに int m_exp; を追加する。
        int m_exp; //!< 経験値
        int level; //!< レベル.
        
    ・倒したら、それを加算するようにする。
        void InitWin()
        {
            m_player.m_exp += m_enemy.m_exp;
        }
        
    ・一定値以上になったら、レベルが上がるようにする
        void LevelUp()
        {
            While( IsLevelUp() )
            {
                m_player.m_level++;
                m_player.m_exp -= Character.MaxExp;
                //@todo:パラメーターの上昇.
            }
        }
        
    ・パラメータのあがり方を考える
        一定確率でランダムを予定
        
//Image管理クラス
    キャラクター画像の表示

//ステージパワーアップ
{
    ランダム要素持たせた方が良い。
    ３パターンぐらいから抽選がベスト。
    完全なランダムは戦略がなくなるから駄目。
}

//動的変数書き換え.
    Stringに全部放り込んで、splitして解析。
    Stringを読み込みなおす処理があれば良い。
    コイツ自体はシングルトンでかまわないしね。
    
    class RewritebleArgment;
    int Integer( string str );
    Rewrite();
    
//アニメーション管理クラス
{
    動的変数書き換えに依存.
}

//ランダムに関する考察
{
    //thinkingへ
    ランダム性って多分いらないよね、まだ。
    数値に乱数を持たせる意味はあんまり無いんだよなぁ。
    こっちのアクションの種類にはランダムはあって良いけど。
}

//スケジュール
{
    仕様確定
        決まっていない仕様は？
        仕様を一覧化する
        
    α仕様
        戦闘画面
        タイトル画面
        ハイスコア画面
        
    スケジュール算出
    α完成はいつになるか？
    
    そんな大々的なものはいらないのではないか。
}

//エンディング画面考えてないな。
{
}

//背景はいついれる？

//サウンドの実装はいつ？
    ｙ先生

//効果音・SE(波形データ)再生環境の構築
    欲しいなぁ。

//街の実装
    いやぁ蛇足だねｗ

//HPが減ると文字色が変化するとかすごく大事な要素。
//タイトル名
{
    プリンセスファンタジア
}

//タイトル画面
{
    insert coin ｗｗｗ
    
    適当に文字と背景スクロールして終わる予定。
    
    ゲート
    それは世界と世界を繋ぐ扉。
    
    
    
}

//モンスターの種類
{
    final int CharacterType_RedSlime = 2;
    final int CharacterType_CraveSlime = 3; //くだらねｗ
    final int CharacterType_GoldSlime = 4;
}
