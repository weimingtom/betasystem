
//画像２枚表示

//勝利・敗北画面の作成

//レベル導入

//3種攻撃導入
    コマンドメニュー

//テクスチャマネージャー

//アニメーション管理

//Stringに全部放り込んで、splitして解析。
Stringを読み込みなおす処理があれば良い。
コイツ自体はシングルトンでかまわないしね。

class RewritebleArgment;
int Integer( string str );

//画像位置調整
    フォトショとかでやる？
    
//動的変数置き換え

//ランダム性って多分いらないよね、まだ。
//数値に乱数を持たせる意味はあんまり無いんだよなぁ。

//こっちのアクションの種類にはランダムはあって良いけど。

//スケジュール
{
    仕様確定
        決まっていない仕様は？
        仕様を一覧化する
        
    α仕様
        戦闘画面
        タイトル画面
        ハイスコア画面
        
    スケジュール算出
    α完成はいつになるか？
}

//スコア算出方法
{
}

//エンディング画面考えてないな。
{
}

//背景はいついれる？

//サウンドの実装はいつ？

//効果音・SE(波形データ)再生環境の構築

//街の実装？

//Sceneの設計
{
    コイツは、メンバ変数が一個増えて、
    コンストラクタの形状が変わるだけになるはず。
    
    class SceneBase
    {
        SceneManagerBase m_scene_manager;
        
        SceneBase( SceneManagerBase scene_manager )
        {
            m_scene_manager = scene_manager;
        }
        Init();
        Update();
        Draw();
    }
    
    /**
        シーン管理クラス.
    */
    class ScenaMangerBase
    {
        SceneBase m_current_scene;
        /**
            シーン生成.
        */
        abstruct SceneBase new_Scene( int );
        
        /**
            シーン切り替え.
        */
        public void ChangeScene( int scene_index )
        {
            m_current_scene = new_Scene( scene_index );
        }
        
        /**
            現在のシーンの取得.
        */
        public SceneBase CurrentScene()
        {
            return m_current_scene;
        }
    }
}
